version: "3"

services:

  platform:
    container_name: platform
    build: .
    healthcheck:
      test: ["CMD", "curl --fail http://localhost:8080/ || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    env_file:
    - .env
    networks:
    - nginx_network
    - database_network
    - redis_network
    depends_on:
    - postgres
    - redis

  nginx:
    container_name: nginx
    image: nginx
    ports:
    - 80:80
    volumes:
    - ./config/nginx:/etc/nginx/conf.d
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    depends_on:
    - platform
    networks:
    - nginx_network

  postgres:
    container_name: postgres
    image: postgres
    env_file:
    - .env
    networks:
    - database_network
    volumes:
    - database_volume:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    networks:
    - redis_network
    volumes:
    - redis_volume:/data

  celery_zkr_beat:
    container_name: celery_zkr_beat
    build: .
    volumes:
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    env_file:
    - .env
    command: celery -A zkr beat -l info
    networks:
    - database_network
    - redis_network
    depends_on:
    - postgres
    - redis

  celery_zkr_default_worker:
    container_name: celery_zkr_default_worker
    build: .
    volumes:
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    env_file:
    - .env
    command: celery -A zkr worker -l info --concurrency=3
    networks:
    - database_network
    - redis_network
    depends_on:
    - celery_zkr_beat

networks:
  nginx_network:
    driver: bridge
  database_network:
    driver: bridge
  redis_network:
    driver: bridge

volumes:
  database_volume:
  static_volume:
  media_volume:
  redis_volume:
